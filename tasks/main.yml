---
# --------------------------------

- name: "System account"
  ansible.builtin.user:
    name: "{{ consul_username }}"
    comment: "Consul system account"
    system: true
    state: present
  become: true
  tags: [ct-consul]

- name: "Download archive"
  ansible.builtin.get_url:
    dest: "{{ hashicorp_dir_staging }}/consul_{{ item.version }}_{{ hashicorp_arch }}.{{ consul_format }}"
    mode: "0644"
    timeout: "{{ hashicorp_internet_timeout }}"
    url: "{{ hashicorp_repo }}/consul/{{ item.version }}/consul_{{ item.version }}_{{ hashicorp_arch }}.{{ consul_format }}"
    validate_certs: false
  loop: "{{ consul_builds }}"
  when: item.state == "present"
  ignore_errors: "{{ ansible_check_mode }}"
  tags: [ct-consul]

- name: "Create package directories"
  ansible.builtin.file:
    state: directory
    owner: root
    group: root
    mode: "0755"
    path: "{{ hashicorp_dir_pkg }}/consul/{{ item.version }}"
  loop: "{{ consul_builds }}"
  when: item.state == "present"
  ignore_errors: "{{ ansible_check_mode }}"
  become: true
  tags: [ct-consul]

- name: "Expand archive"
  ansible.builtin.unarchive:
    src: "{{ hashicorp_dir_staging }}/consul_{{ item.version }}_{{ hashicorp_arch }}.{{ consul_format }}"
    dest: "{{ hashicorp_dir_pkg }}/consul/{{ item.version }}"
    copy: false
  loop: "{{ consul_builds }}"
  when: item.state == "present"
  ignore_errors: "{{ ansible_check_mode }}"
  become: true
  tags: [ct-consul]

- name: "Create symlink to active binary"
  ansible.builtin.file:
    dest: "{{ hashicorp_dir_bin }}/consul"
    src: "{{ hashicorp_dir_pkg }}/consul/{{ consul_version }}/consul"
    state: link
  ignore_errors: "{{ ansible_check_mode }}"
  become: true
  tags: [ct-consul]

- name: "Push bash include"
  ansible.builtin.template:
    src: consul.sh.j2
    dest: /usr/local/etc/bash.d/consul.sh
    owner: root
    group: root
    mode: "0644"
  become: true
  tags: [ct-consul]

- name: "Top level directories"
  ansible.builtin.file:
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
    owner: "{{ item.owner }}"
    path: "{{ item.path }}"
    state: directory
  loop: "{{ consul_dirs }}"
  become: true
  tags: [ct-consul]

- name: "ACL directories"
  ansible.builtin.file:
    group: root
    mode: "0700"
    owner: root
    path: "{{ consul_acl_dir }}/{{ item }}"
    state: directory
  loop: "{{ consul_acl_subdirs }}"
  when: consul_role == "server"
  become: true
  tags: [ct-consul]

- name: "Render Consul config (no_log)"
  ansible.builtin.template:
    src: "{{ consul_role }}.json.j2"
    dest: "{{ consul_etc_dir }}/{{ consul_role }}.json"
    owner: root
    group: root
    mode: "0600"
  when: (consul_servers | length) > 0
  notify: Handler_Reload_Consul
  no_log: true
  become: true
  tags: [ct-consul]

- name: "Render systemd unit file"
  ansible.builtin.template:
    dest: /etc/systemd/system/consul-{{ consul_role }}.service
    group: root
    mode: "0600"
    owner: root
    src: consul-{{ consul_role }}.service.j2
  register: reg_service
  become: true
  tags: [ct-consul]

- name: "Set Consul service"
  ansible.builtin.systemd:
    name: consul-{{ consul_role }}
    daemon_reload: "{{ reg_service is changed }}"
    enabled: "{{ consul_svc_enabled | bool | lower }}"
    state: "{{ consul_svc_state }}"
  when: (consul_servers | length) > 0
  ignore_errors: "{{ ansible_check_mode }}"
  become: true
  tags: [ct-consul]

# --------------------------------
...
